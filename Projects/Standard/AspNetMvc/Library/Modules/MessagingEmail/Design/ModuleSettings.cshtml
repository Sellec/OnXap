@using OnXap.Modules.MessagingEmail.Model
@model Configuration
@{
    Layout = "~/AdminForModules/Design/baseModuleEdit.cshtml";
    var smtpAttributes = new { @class = "js-smtp__block", size = 40 };
}

@section scripts {
    <script type='text/javascript'>
        var blockCheckerClass = "js-block-checker";
        $(document).ready(function () {
            InitSettings("@(smtpAttributes.@class)");
        });

        function InitSettings(className) {
            $("select." + className).attr("size", 1);

            $("input[type=checkbox][name='@Html.NameFor(x => x.IsUseSmtp)']").change(function () {
                var isChecked = $(this).is(":checked");
                $("." + className).not("[name='@Html.NameFor(x => x.IsUseSmtp)']").each(function () {
                    if (isChecked) {
                        $(this).closest('tr').show();
                    }
                    else {
                        $(this).closest('tr').hide();
                    }
                });
            }).change();

            $("input[type=checkbox][name='@Html.NameFor(x => x.IsAnonymous)']").change(function () {
                $("input[name='@Html.NameFor(x => x.Login)'], input[name='@Html.NameFor(x => x.Password)']").prop('disabled', $(this).is(":checked"));
            }).change();
        }
    </script>
}

@section ModuleConfiguration {
    <tr>
        <th colspan="2" align="center">@Html.CheckBoxFor(x => x.IsUseSmtp, smtpAttributes) @Html.LabelFor(x => x.IsUseSmtp)</th>
    </tr>
    <tr>
        <td>@Html.LabelFor(x => x.Server)</td>
        <td>
            @Html.TextBoxFor(x => x.Server, smtpAttributes)
            @Html.ValidationMessageFor(x => x.Server)
        </td>
    </tr>
    <tr>
        <td>@Html.LabelFor(x => x.IsSecure)</td>
        <td>
            @Html.CheckBoxFor(x => x.IsSecure, smtpAttributes)
            @Html.ValidationMessageFor(x => x.IsSecure)
        </td>
    </tr>
    <tr>
        <td>@Html.LabelFor(x => x.Port)</td>
        <td>
            @Html.TextBoxFor(x => x.Port, smtpAttributes)
            @Html.ValidationMessageFor(x => x.Port)
        </td>
    </tr>
    <tr>
        <td>@Html.LabelFor(x => x.IsIgnoreCertificateErrors)</td>
        <td>
            @Html.CheckBoxFor(x => x.IsIgnoreCertificateErrors, smtpAttributes)
            @Html.ValidationMessageFor(x => x.IsIgnoreCertificateErrors)
        </td>
    </tr>
    <tr>
        <td>@Html.LabelFor(x => x.OutgoingAddress)</td>
        <td>
            @Html.TextBoxFor(x => x.OutgoingAddress, smtpAttributes)
            @Html.ValidationMessageFor(x => x.OutgoingAddress)
        </td>
    </tr>
    <tr>
        <td>@Html.LabelFor(x => x.OutgoingName)</td>
        <td>
            @Html.TextBoxFor(x => x.OutgoingName, smtpAttributes)
            @Html.ValidationMessageFor(x => x.OutgoingName)
        </td>
    </tr>
    <tr>
        <th colspan="2" align="center">
            @Html.CheckBoxFor(x => x.IsAnonymous, smtpAttributes) 
            @Html.LabelFor(x => x.IsAnonymous)
            @Html.ValidationMessageFor(x => x.IsAnonymous)
        </th>
    </tr>
    <tr>
        <td>@Html.LabelFor(x => x.Login)</td>
        <td>
            @Html.TextBoxFor(x => x.Login, smtpAttributes)
            @Html.ValidationMessageFor(x => x.Login)
        </td>
    </tr>
    <tr>
        <td>@Html.LabelFor(x => x.Password, smtpAttributes)</td>
        <td>
            @Html.TextBoxFor(x => x.Password)
            @Html.ValidationMessageFor(x => x.Password)
        </td>
    </tr>

}