@using OnXap.Modules.Admin
@using OnXap.Modules.Adminmain.Model
@model Modules
@{ var moduleAdmin = this.GetAppCore().Get<ModuleAdmin>(); }

<script type='text/javascript' src="~/Data/Modules/Adminmain/Adminmain.js"></script>
<script type='text/javascript'>
    $(document).ready(function(){
        $("#block").hide();
        var rows = @Model.Registered.ToArray().jsobject();
        changeTitle('Управление модулями');
        Adminmain.Modules.Init({
            rows: rows.map(function(x) {
                return {
                    id: x.@Html.NameOf(x => x.Registered.First().Id) ? Number(x.@Html.NameOf(x => x.Registered.First().Id)) : 0,
                    caption: x.@Html.NameOf(x => x.Registered.First().Caption) ? String(x.@Html.NameOf(x => x.Registered.First().Caption)) : null,
                    configAllowed: x.@Html.NameOf(x => x.Registered.First().IsConfigAllowed) ? Boolean(x.@Html.NameOf(x => x.Registered.First().IsConfigAllowed)) : false,
                    type: x.@Html.NameOf(x => x.Registered.First().Type) ? String(x.@Html.NameOf(x => x.Registered.First().Type)) : null,
                    uniqueName: x.@Html.NameOf(x => x.Registered.First().UniqueName) ? String(x.@Html.NameOf(x => x.Registered.First().UniqueName)) : null,
                    urlName: x.@Html.NameOf(x => x.Registered.First().UrlName) ? String(x.@Html.NameOf(x => x.Registered.First().UrlName)) : null
                };
            }),
            moduleConfigUrl: "/@moduleAdmin.UrlName/madmin/{0}/config"
        });
    });
</script>

<h2>Модули</h2>
<div id="js-modules"></div>
