@using OnXap.Core.Db
@using OnXap.Modules.Customer
@using OnXap.Modules.Customer.Design.Model
@model AdminUsersManage
@{ 
    var stateList = new Dictionary<int, string>() {
        { (int)UserState.Active, UserState.Active.ToStringFriendly() },
        { (int)UserState.Disabled, UserState.Disabled.ToStringFriendly() },
        { (int)UserState.RegisterDecline, UserState.RegisterDecline.ToStringFriendly() },
        { (int)UserState.RegisterNeedConfirmation, UserState.RegisterNeedConfirmation.ToStringFriendly() },
        { (int)UserState.RegisterWaitForModerate, UserState.RegisterWaitForModerate.ToStringFriendly() },
    };
}

<script src="~/Data/Modules//Customer/CustomerAdmin.js"></script>
<script type='text/javascript'>
    $(document).ready(function () {
        $("#block").hide();
        changeTitle('Пользователи');
        CustomerAdmin.AdminUsersManage.Init(new CustomerAdmin.AdminUsersManage.ViewModel(
            @Model.jsobject(),
            @stateList.jsobject(),
            @this.GetCurrentUserContext().IsSuperuser.ToString().ToLower(),
            "@(Url.CreateRoute<ModuleCustomer, ModuleControllerAdminCustomer>(x => x.UsersList(Model.RequestedState, null)))",
            function (idUser) { return "@(Url.CreateRoute<ModuleCustomer, ModuleControllerAdminCustomer>(x => x.UserDelete(-321098)))".replace("-321098", idUser); },
            function (idUser) { return '/admin/mnadmin/@this.GetModule().UrlName/users_edit/' + idUser; },
            function (idUser) { return '/admin/mnadmin/@this.GetModule().UrlName/rolesDelegate/' + idUser; },
            function (idUser) { return '/admin/madmin/@this.GetModule().UrlName/userAs/' + idUser; }
        ));
    });
</script>

<h2>Список пользователей</h2>
<div id='del_res'></div>
<div id="js-users-list__table"></div>

